{"version":3,"sources":["http-client-backend.service.ts"],"names":[],"mappings":"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","file":"http-client-backend.service.js","sourceRoot":"","sourcesContent":["import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpBackend,\n  HttpHeaders,\n  HttpParams,\n  HttpRequest,\n  HttpResponse, HttpResponseBase,\n  HttpXhrBackend,\n  XhrFactory\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operator/map';\n\nimport { STATUS } from './http-status-codes';\n\nimport {\n  InMemoryBackendConfig,\n  InMemoryBackendConfigArgs,\n  InMemoryDbService,\n  ResponseOptions\n} from './interfaces';\n\nimport { BackendService } from './backend.service';\n\n/**\n * For Angular `HttpClient` simulate the behavior of a RESTy web api\n * backed by the simple in-memory data store provided by the injected `InMemoryDbService`.\n * Conforms mostly to behavior described here:\n * http://www.restapitutorial.com/lessons/httpmethods.html\n *\n * ### Usage\n *\n * Create an in-memory data store class that implements `InMemoryDbService`.\n * Call `config` static method with this service class and optional configuration object:\n * ```\n * // other imports\n * import { HttpClientModule } from '@angular/common/http';\n * import { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n *\n * import { InMemHeroService, inMemConfig } from '../api/in-memory-hero.service';\n * @NgModule({\n *  imports: [\n *    HttpModule,\n *    HttpClientInMemoryWebApiModule.forRoot(InMemHeroService, inMemConfig),\n *    ...\n *  ],\n *  ...\n * })\n * export class AppModule { ... }\n * ```\n */\n\nexport class HttpClientBackendService extends BackendService implements HttpBackend {\n\n  constructor(\n    inMemDbService: InMemoryDbService,\n      config: InMemoryBackendConfigArgs,\n    private xhrFactory: XhrFactory\n    ) {\n    super(inMemDbService, config);\n  }\n\n  handle(req: HttpRequest<any>): Observable<HttpResponse<any>> {\n    try {\n      return this.handleRequest(req);\n\n    } catch (error) {\n      const err = error.message || error;\n      const resOptions = this.createErrorResponseOptions(req.url, STATUS.INTERNAL_SERVER_ERROR, `${err}`);\n      return this.createResponse$(() => resOptions);\n    }\n  }\n\n  ////  protected overrides /////\n\n  protected getJsonBody(req: HttpRequest<any>): any {\n    return req.body;\n  }\n\n  protected getRequestMethod(req: HttpRequest<any>): string {\n    return (req.method || 'get').toLowerCase();\n  }\n\n  protected createHeaders(headers: { [index: string]: string; }): HttpHeaders {\n    return new HttpHeaders(headers);\n  }\n\n  protected createQueryMap(search: string): Map<string, string[]> {\n    const map = new Map<string, string[]>();\n    if (search) {\n      const params = new HttpParams({fromString: search});\n      params.keys().forEach(p => map.set(p, params.getAll(p)));\n    }\n    return map;\n  }\n\n  protected createResponse$fromResponseOptions$(resOptions$: Observable<ResponseOptions>): Observable<HttpResponse<any>> {\n    return map.call(resOptions$,\n      (opts: HttpResponseBase) => new HttpResponse<any>(opts));\n  }\n\n  protected createPassThruBackend() {\n    try {\n      return new HttpXhrBackend(this.xhrFactory);\n    } catch (ex) {\n      ex.message = 'Cannot create passThru404 backend; ' + (ex.message || '');\n      throw ex;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: InMemoryDbService, },\n{type: InMemoryBackendConfigArgs, decorators: [{ type: Inject, args: [InMemoryBackendConfig, ] }, { type: Optional }, ]},\n{type: XhrFactory, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}