{"version":3,"sources":["delay-response.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAE7C,0CAA0C;AAC1C,8FAA8F;AAC9F,MAAM,wBAA2B,SAAwB,EAAE,OAAe;IACxE,MAAM,CAAC,IAAI,UAAU,CAAI,UAAA,QAAQ;QAC/B,IAAI,eAAe,GAAG,KAAK,CAAC;QAC5B,IAAI,WAAW,GAAG,KAAK,CAAC;QACxB,IAAM,YAAY,GAAG,SAAS,CAAC,SAAS,CACtC,UAAA,KAAK;YACD,WAAW,GAAG,IAAI,CAAC;YACnB,UAAU,CAAC;gBACX,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;oBACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;YACH,CAAC,EAAE,OAAO,CAAC,CAAC;QACd,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,UAAU,CAAC,cAAM,OAAA,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,EAArB,CAAqB,EAAE,OAAO,CAAC,EAAhD,CAAgD,EACzD;YACE,eAAe,GAAG,IAAI,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACjB,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC;QACH,CAAC,CACF,CAAC;QACF,MAAM,CAAC;YACL,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QACpC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC","file":"delay-response.js","sourceRoot":"","sourcesContent":["import { Observable } from 'rxjs/Observable';\n\n// Replaces use of RxJS delay. See v0.5.4.\n/** adds specified delay (in ms) to both next and error channels of the response observable */\nexport function delayResponse<T>(response$: Observable<T>, delayMs: number): Observable<T> {\n  return new Observable<T>(observer => {\n    let completePending = false;\n    let nextPending = false;\n    const subscription = response$.subscribe(\n      value => {\n          nextPending = true;\n          setTimeout(() => {\n          observer.next(value);\n          if (completePending) {\n            observer.complete();\n          }\n        }, delayMs);\n      },\n      error => setTimeout(() => observer.error(error), delayMs),\n      () => {\n        completePending = true;\n        if (!nextPending) {\n          observer.complete();\n        }\n      }\n    );\n    return () => {\n      return subscription.unsubscribe();\n    };\n  });\n}\n"]}