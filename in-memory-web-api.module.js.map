{"version":3,"sources":["in-memory-web-api.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAA,EAAU,QAAA,EAAoC,MAAO,eAAA,CAAgB;AAC9E,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C,OAAO,EAEL,qBAAqB,EACrB,iBAAiB,EAClB,MAAM,cAAA,CAAe;AAEtB,OAAO,EAAE,sBAAA,EAAuB,MAAO,wBAAA,CAAyB;AAEhE,sCAAsC;AACtC,MAAM,wCACJ,QAAU,EACV,SAAW,EACX,OAAS;IAET,IAAI,OAAA,GAAe,IAAI,sBAAA,CAAuB,QAAC,EAAS,SAAA,EAAW,OAAA,CAAQ,CAAC;IAC5E,MAAM,CAAc,OAAQ,CAAC;AAC/B,CAAC;AAGD;IAAA;IAiCA,CAAC;IAhCC;;;;;;;;;;MAUE;IACK,4BAAO,GAAd,UAAe,SAAkC,EAAE,OAAmC;QACpF,MAAM,CAAC;YACL,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,iBAAiB,EAAG,QAAQ,EAAE,SAAS,EAAE;gBACpD,EAAE,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,OAAO,EAAE;aACtD;SACF,CAAC;IACJ,CAAC;IAaH,2BAAC;AAAD,CAjCA,AAiCC;;AAZM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,0BAA0B;gBAC1B,kDAAkD;gBAClD,SAAS,EAAE,CAAE,EAAE,OAAO,EAAE,UAAU;wBACnB,UAAU,EAAE,6BAA6B;wBACzC,IAAI,EAAE,CAAC,QAAQ,EAAE,iBAAiB,EAAE,qBAAqB,CAAC,EAAC,CAAE;aAC7E,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"in-memory-web-api.module.js","sourceRoot":"","sourcesContent":["import { Injector, NgModule, ModuleWithProviders, Type } from '@angular/core';\nimport { XHRBackend } from '@angular/http';\n\nimport {\n  InMemoryBackendConfigArgs,\n  InMemoryBackendConfig,\n  InMemoryDbService\n} from './interfaces';\n\nimport { InMemoryBackendService } from './http-backend.service';\n\n// AoT requires factory to be exported\nexport function inMemoryBackendServiceFactory(\n  injector: Injector,\n  dbService: InMemoryDbService,\n  options: InMemoryBackendConfig\n): XHRBackend {\n  let backend: any = new InMemoryBackendService(injector, dbService, options);\n  return (<XHRBackend>backend);\n}\n\n\nexport class InMemoryWebApiModule {\n  /**\n  *  Prepare in-memory-web-api in the root/boot application module\n  *  with class that implements InMemoryDbService and creates an in-memory database.\n  *\n  * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\n  * @param {InMemoryBackendConfigArgs} [options]\n  *\n  * @example\n  * InMemoryWebApiModule.forRoot(dbCreator);\n  * InMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\n  */\n  static forRoot(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders {\n    return {\n      ngModule: InMemoryWebApiModule,\n      providers: [\n        { provide: InMemoryDbService,  useClass: dbCreator },\n        { provide: InMemoryBackendConfig, useValue: options },\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  // Must useFactory for AoT\n  // https://github.com/angular/angular/issues/11178\n  providers: [ { provide: XHRBackend,\n                 useFactory: inMemoryBackendServiceFactory,\n                 deps: [Injector, InMemoryDbService, InMemoryBackendConfig]} ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}