{"version":3,"file":"in-memory-web-api.module.js","sourceRoot":"","sources":["in-memory-web-api.module.ts"],"names":[],"mappings":"OAAO,EAAE,QAAQ,EAAE,QAAQ,EAA6B,MAAM,eAAe;OACtE,EAAE,UAAU,EAAE,MAAM,eAAe;OAEnC,EAEL,qBAAqB,EACrB,sBAAsB,EACtB,iBAAiB,EAClB,MAAM,6BAA6B;AAEpC,sCAAsC;AACtC,8CACE,QAAkB,EAClB,SAA4B,EAC5B,OAA8B;IAE9B,IAAI,OAAO,GAAQ,IAAI,sBAAsB,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IAC5E,MAAM,CAAc,OAAQ,CAAC;AAC/B,CAAC;AAGD;IAAA;IAiCA,CAAC;IAhCC;;;;;;;;;;MAUE;IACK,4BAAO,GAAd,UAAe,SAAkC,EAAE,OAAmC;QACpF,MAAM,CAAC;YACL,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,iBAAiB,EAAG,QAAQ,EAAE,SAAS,EAAE;gBACpD,EAAE,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,OAAO,EAAE;aACtD;SACF,CAAC;IACJ,CAAC;IACI,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,0BAA0B;oBAC1B,kDAAkD;oBAClD,SAAS,EAAE,CAAE,EAAE,OAAO,EAAE,UAAU;4BACnB,UAAU,EAAE,6BAA6B;4BACzC,IAAI,EAAE,CAAC,QAAQ,EAAE,iBAAiB,EAAE,qBAAqB,CAAC,EAAC,CAAE;iBAC7E,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,2BAAC;AAAD,CAAC,AAjCD,IAiCC","sourcesContent":["import { Injector, NgModule, ModuleWithProviders, Type } from '@angular/core';\r\nimport { XHRBackend } from '@angular/http';\r\n\r\nimport {\r\n  InMemoryBackendConfigArgs,\r\n  InMemoryBackendConfig,\r\n  InMemoryBackendService,\r\n  InMemoryDbService\r\n} from './in-memory-backend.service';\r\n\r\n// AoT requires factory to be exported\r\nexport function inMemoryBackendServiceFactory(\r\n  injector: Injector,\r\n  dbService: InMemoryDbService,\r\n  options: InMemoryBackendConfig\r\n): XHRBackend {\r\n  let backend: any = new InMemoryBackendService(injector, dbService, options);\r\n  return (<XHRBackend>backend);\r\n}\r\n\r\n\r\nexport class InMemoryWebApiModule {\r\n  /**\r\n  *  Prepare in-memory-web-api in the root/boot application module\r\n  *  with class that implements InMemoryDbService and creates an in-memory database.\r\n  *\r\n  * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\r\n  * @param {InMemoryBackendConfigArgs} [options]\r\n  *\r\n  * @example\r\n  * InMemoryWebApiModule.forRoot(dbCreator);\r\n  * InMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\r\n  */\r\n  static forRoot(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders {\r\n    return {\r\n      ngModule: InMemoryWebApiModule,\r\n      providers: [\r\n        { provide: InMemoryDbService,  useClass: dbCreator },\r\n        { provide: InMemoryBackendConfig, useValue: options },\r\n      ]\r\n    };\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  // Must useFactory for AoT\r\n  // https://github.com/angular/angular/issues/11178\r\n  providers: [ { provide: XHRBackend,\r\n                 useFactory: inMemoryBackendServiceFactory,\r\n                 deps: [Injector, InMemoryDbService, InMemoryBackendConfig]} ]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}