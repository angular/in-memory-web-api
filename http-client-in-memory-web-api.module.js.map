{"version":3,"sources":["http-client-in-memory-web-api.module.ts"],"names":[],"mappings":"AAAA,mCAAC;AAED,OAAO,EAAE,QAAA,EAAoC,MAAO,eAAA,CAAgB;AACpE,OAAO,EAAE,WAAA,EAAa,UAAA,EAAW,MAAO,sBAAA,CAAuB;AAE/D,OAAO,EAEL,qBAAqB,EACrB,iBAAiB,EAClB,MAAM,cAAA,CAAe;AAEtB,OAAO,EAAE,wBAAA,EAAyB,MAAO,+BAAA,CAAgC;AAEzE,kEAAkE;AAClE,sCAAsC;AACtC,MAAM,+CACJ,SAAW,EACX,OAAS,EACT,UAAY;IAEZ,IAAM,OAAA,GAAe,IAAI,wBAAA,CAAyB,SAAC,EAAU,OAAA,EAAS,UAAA,CAAW,CAAC;IAClF,MAAM,CAAC,OAAA,CAAQ;AACjB,CAAC;AAGD;IAAA;IA4CA,CAAC;IA3CC;;;;;;;;;;;;;;MAcE;IACK,sCAAO,GAAd,UAAe,SAAkC,EAAE,OAAmC;QACpF,MAAM,CAAC;YACL,QAAQ,EAAE,8BAA8B;YACxC,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,iBAAiB,EAAG,QAAQ,EAAE,SAAS,EAAE;gBACpD,EAAE,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,OAAO,EAAE;gBAErD,EAAE,OAAO,EAAE,WAAW;oBACpB,UAAU,EAAE,oCAAoC;oBAChD,IAAI,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,UAAU,CAAC,EAAC;aAChE;SACF,CAAC;IACJ,CAAC;IACC;;;;;KAKC;IACI,yCAAU,GAAjB,UAAkB,SAAkC,EAAE,OAAmC;QACvF,MAAM,CAAC,8BAA8B,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACpE,CAAC;IAOH,qCAAC;AAAD,CA5CA,AA4CC;;AANM,yCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,EAAG,EAAE;CAC/B,CAAC;AACF,kBAAkB;AACX,6CAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"http-client-in-memory-web-api.module.js","sourceRoot":"","sourcesContent":["////// HttpClient-Only version ////\n\nimport { NgModule, ModuleWithProviders, Type } from '@angular/core';\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\n\nimport {\n  InMemoryBackendConfigArgs,\n  InMemoryBackendConfig,\n  InMemoryDbService\n} from './interfaces';\n\nimport { HttpClientBackendService } from './http-client-backend.service';\n\n// Internal - Creates the in-mem backend for the HttpClient module\n// AoT requires factory to be exported\nexport function httpClientInMemBackendServiceFactory(\n  dbService: InMemoryDbService,\n  options: InMemoryBackendConfig,\n  xhrFactory: XhrFactory,\n): HttpBackend {\n  const backend: any = new HttpClientBackendService(dbService, options, xhrFactory);\n  return backend;\n}\n\n\nexport class HttpClientInMemoryWebApiModule {\n  /**\n  *  Redirect the Angular `HttpClient` XHR calls\n  *  to in-memory data store that implements `InMemoryDbService`.\n  *  with class that implements InMemoryDbService and creates an in-memory database.\n  *\n  *  Usually imported in the root application module.\n  *  Can import in a lazy feature module too, which will shadow modules loaded earlier\n  *\n  * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\n  * @param {InMemoryBackendConfigArgs} [options]\n  *\n  * @example\n  * HttpInMemoryWebApiModule.forRoot(dbCreator);\n  * HttpInMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\n  */\n  static forRoot(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders {\n    return {\n      ngModule: HttpClientInMemoryWebApiModule,\n      providers: [\n        { provide: InMemoryDbService,  useClass: dbCreator },\n        { provide: InMemoryBackendConfig, useValue: options },\n\n        { provide: HttpBackend,\n          useFactory: httpClientInMemBackendServiceFactory,\n          deps: [InMemoryDbService, InMemoryBackendConfig, XhrFactory]}\n      ]\n    };\n  }\n    /**\n   *\n   * Enable and configure the in-memory web api in a lazy-loaded feature module.\n   * Same as `forRoot`.\n   * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\n   */\n  static forFeature(dbCreator: Type<InMemoryDbService>, options?: InMemoryBackendConfigArgs): ModuleWithProviders {\n    return HttpClientInMemoryWebApiModule.forRoot(dbCreator, options);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}